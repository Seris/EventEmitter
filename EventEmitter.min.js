/**
 * Event Emitter (Node.JS => Browser)
 * Created by Seris (Twitter: @Serris_) seerriss@gmail.com
 * License: GNU GENERAL PUBLIC LICENSE, Version 3, 29 June 2007 (https://www.gnu.org/licenses/gpl-3.0.txt)
 * URL: https://github.com/Seris/EventEmitter
 **/

;(function(){"use strict";var e=function(){};e.listenerCount=function(t,n){if(!t instanceof e){return 0}if(!arguments[1]){return 0}if(t._events[n]){return t._events[n].length}else{return 0}};e.prototype._maxListeners=10;e.prototype._events={};e.prototype.on=function(e,t){if(typeof arguments[1]!=="function"){throw new TypeError("listener must be a function")}var e=e.toString();if(!this._events[e]){this._events[e]=[];this._events[e].warned=false}if(this._maxListeners!==0&&this._events[e].length-1>this._maxListeners&&!this._events[e].warned){console.warn("possible EventEmitter memory leak detected. "+(this._events[e].length-1)+" listeners added. Use emitter.setMaxListeners() to increase limit.");this._events[e].warned=true}this._events[e].push(t);this.emit("newListener",e,t)};e.prototype.once=function(e,t){if(typeof arguments[1]!=="function"){throw new TypeError("listener must be a function")}var e=e.toString();if(!this._events[e]){this._events[e]=[];this._events[e].warned=false}if(this._maxListeners!==0&&this._events[e].length-1>this._maxListeners&&!this._events[e].warned){console.warn("possible EventEmitter memory leak detected. "+this._events[e].length+" listeners added. Use emitter.setMaxListeners() to increase limit.");this._events[e].warned=true}this._events[e].push({listener:t});this.emit("newListener",e,t)};e.prototype.emit=function(e,t){if(typeof e!=="string"){throw new TypeError("Expected string for event ! "+typeof e+" given !")}if(!this._events[e]){return}delete arguments[0];for(var n in arguments){arguments[n-1]=arguments[n];delete arguments[n]}for(var r=0;r<this._events[e].length;r++){switch(typeof this._events[e][r]){case"function":this._events[e][r].apply(this,arguments);break;case"object":this._events[e][r].listener.apply(this,arguments);this._events[e].splice(r,1);break}}for(var n in arguments){delete arguments[n]}};e.prototype.removeListener=function(e,t){if(typeof e!=="string"){throw new TypeError("Expected string for event ! "+typeof e+" given !")}if(typeof t!=="function"){throw new TypeError("Listener must be a function !")}if(!this._events[e]){return false}var n=this._events[e].indexOf(t);if(n!==-1){this.emit("removeListener",e,t);this._events[e].splice(n,1);return true}else{return false}};e.prototype.removeAllListeners=function(e){if(arguments[0]){if(typeof e!=="string"){throw new TypeError("Expected string for event ! "+typeof e+" given !")}delete this._events[e]}else{this._events={}}};e.prototype.setMaxListeners=function(e){if(typeof e!=="number"){throw new TypeError("Expected number for max listeners ! "+typeof event+" given !")}if(e<0){throw new TypeError("Expected number greater or equal to 0 for max listeners ! "+e+" given !")}this._maxListeners=e};e.prototype.listeners=function(e){if(!this._events[e]){return[]}return this._events[e].slice(0)};this.EventEmitter=e}).call(window);