/**
 * Event Emitter (Node.JS => Browser)
 * Created by Seris (Twitter: @Serris_) seerriss@gmail.com
 * License: GNU GENERAL PUBLIC LICENSE, Version 3, 29 June 2007 (https://www.gnu.org/licenses/gpl-3.0.txt)
 * URL: https://github.com/Seris/EventEmitter
 **/

!function(){"use strict";var a=function(){};a.listenerCount=function(b,c){return!b instanceof a?0:arguments[1]?b._events[c]?b._events[c].length:0:0},a.prototype._maxListeners=10,a.prototype._events={},a.prototype.on=function(a,b){if("function"!=typeof arguments[1])throw new TypeError("listener must be a function");var a=a.toString();this._events[a]||(this._events[a]=[],this._events[a].warned=!1),0!==this._maxListeners&&this._events[a].length-1>this._maxListeners&&!this._events[a].warned&&(console.warn("possible EventEmitter memory leak detected. "+(this._events[a].length-1)+" listeners added. Use emitter.setMaxListeners() to increase limit."),this._events[a].warned=!0),this._events[a].push(b),this.emit("newListener",a,b)},a.prototype.once=function(a,b){if("function"!=typeof arguments[1])throw new TypeError("listener must be a function");var a=a.toString();this._events[a]||(this._events[a]=[],this._events[a].warned=!1),0!==this._maxListeners&&this._events[a].length-1>this._maxListeners&&!this._events[a].warned&&(console.warn("possible EventEmitter memory leak detected. "+this._events[a].length+" listeners added. Use emitter.setMaxListeners() to increase limit."),this._events[a].warned=!0),this._events[a].push({listener:b}),this.emit("newListener",a,b)},a.prototype.emit=function(){if("string"!=typeof arguments[0])throw new TypeError("Expected string for event ! "+typeof arguments[0]+" given !");var a=arguments[0];if(this._events[a]){for(var b=new Array(arguments.length),c=1;c<arguments.length;c++)b[c-1]=arguments[c];for(var c=0;c<this._events[a].length;c++)switch(typeof this._events[a][c]){case"function":!function(a){setTimeout(function(){a.apply(this,b)},0)}.call(this,this._events[a][c]);break;case"object":var e=this._events[a].splice(c,1)[0];!function(a){setTimeout(function(){a.listener.apply(this,b)},0),c--}.call(this,e)}}},a.prototype.removeListener=function(a,b){if("string"!=typeof a)throw new TypeError("Expected string for event ! "+typeof a+" given !");if("function"!=typeof b)throw new TypeError("Listener must be a function !");if(!this._events[a])return!1;var c=this._events[a].indexOf(b);return-1!==c?(this.emit("removeListener",a,b),this._events[a].splice(c,1),!0):!1},a.prototype.removeAllListeners=function(a){if(arguments[0]){if("string"!=typeof a)throw new TypeError("Expected string for event ! "+typeof a+" given !");delete this._events[a]}else this._events={}},a.prototype.setMaxListeners=function(a){if("number"!=typeof a)throw new TypeError("Expected number for max listeners ! "+typeof event+" given !");if(0>a)throw new TypeError("Expected number greater or equal to 0 for max listeners ! "+a+" given !");this._maxListeners=a},a.prototype.listeners=function(a){return this._events[a]?this._events[a].slice(0):[]},this.EventEmitter=a}.call(window);